<?xml version="1.0"?>

<!--
   $Author: beo1 $
   $Id: build.xml 1352 2012-12-05 14:23:29Z beo1 $

   Build file for the Logo project
-->

<project name="Logo" default="usage" basedir=".">

   <description>
      Ant file for the Logo project of course Allgemeine Informatik
   </description>

   <!-- build-specific properties -->
   <property file="${user.home}/.ant.properties"/>
   <property file="build.properties"/>

   <!-- specific properties overwritten by build.properties if any -->
   <property name="source.file" value="Logo" />

   <!-- global properties -->

   <!-- default test (gobaltest.logo) that will be converted into java -->
   <property name="filename" value="demo" />

   <!-- java 7.0 (1.7) by default -->
   <property name="source.option" value="1.7" />

   <!-- source directory, where the JavaCC source file is -->
   <property name="src.dir" value="src" />
   <!-- build directory used by JavaCC and compile -->
   <property name="build.dir" value="build" />
   <!-- directory where the zip file is generated -->
   <property name="dist.dir" value="dist" />
   <!-- directory where logo files are -->
   <property name="logo.in.dir" value="logofiles" />
   <!-- directory where translated file are put -->
   <property name="logo.out.dir" value="output" />
   <!-- primitives of the Logo languages -->
   <property name="logo.primitives" value="LogoPrimitives" />
   <!-- ditribution file, a zip of everything -->
   <property name="dist.file" value="dist.zip" />

   <!-- Usage -->
   <target name="usage">
      <echo message="Available targets" />
      <echo message="   usage: shows this explanation" />
      <echo message="   init: creates all required directories" />
      <echo message="   parser: generates the logo parser from src/Logo.jj" />
      <echo message="   compile: compiles all java files generated by JavaCC" />
      <echo message="   convert: translates a logo file (${filename})" />
      <echo message="      for example 'ant convert -Dfilename=serpinski'" />
      <echo message="   run: run appletiviewer with a compiled logo file" />
      <echo message="      for example 'ant run -Dfilename=serpinski'" />
      <echo message="   dist: make the distribution file dist.file" />
      <echo message="   clean: removes all the files in build" />
      <echo message="   clean-dist: removes the distribution file (.zip)" />
      <echo message="   clean-out: removes all the output files" />
      <echo message="   clean-all: clean, clean-out and clean-dist" />
   </target>

   <!-- Init -->
   <target name="init">
      <tstamp />
      <mkdir dir="${build.dir}" />
      <mkdir dir="${logo.out.dir}" />
      <copy file="${src.dir}/${logo.primitives}.java" todir="${build.dir}" />
   </target>

   <!-- Parser: translate the .jj file into java -->
   <target name="parser" depends="init">
      <javacc target="${src.dir}/${source.file}.jj"
              javacchome="${javacc.home}"
              outputdirectory="${build.dir}" />
   </target>

   <!-- Compile: compile the generated files by the translation -->
   <target name="compile" depends="parser">
      <javac destdir="${build.dir}" deprecation="on" source="${source.option}"
	     includeantruntime="false">
         <src path="${build.dir}" />
         <include name="**/*.java" />
      </javac>
   </target>

   <!-- Convert, compile converted file, and move them to logo.out.dir -->
   <target name="convert" depends="compile">
      <java classname="${source.file}" fork="true" dir="${build.dir}">
         <arg value="../${logo.in.dir}/${filename}.logo"/>
         <classpath>
            <pathelement path="${build.dir}" />
         </classpath>
      </java>
      <javac destdir="${build.dir}" deprecation="on" source="${source.option}"
	     includeantruntime="false">
         <src path="${build.dir}" />
         <include name="**/*.java" />
      </javac>
      <copy file="${build.dir}/${filename}.java" todir="${logo.out.dir}" />
      <copy file="${build.dir}/${filename}.class" todir="${logo.out.dir}" />
      <copy file="${build.dir}/${filename}.html" todir="${logo.out.dir}" />
      <copy file="${build.dir}/${logo.primitives}.class"
            todir="${logo.out.dir}" />
   </target>

  <!-- Run compiled logo file into appletviewer -->
   <target name="run" depends="convert">
      <exec executable="appletviewer" dir="${logo.out.dir}">
         <arg value="${filename}.html"/>
      </exec>
   </target>

   <!-- Dist: makes the distribution file (.zip) to send by email -->
   <target name="dist" depends="clean-dist">
      <zip destfile="${dist.file}" basedir="."
        includes="src/**, doc/**, build.xml, build.properties,
          README, logofiles/**" />
   </target>

   <!-- Clean targets -->
   <target name="clean-dist">
      <delete file="${dist.file}" />
   </target>

   <target name="clean">
      <delete dir="${build.dir}" />
   </target>

   <target name="clean-out">
      <delete dir="${logo.out.dir}" />
   </target>

   <target name="clean-all" depends="clean, clean-out, clean-dist" />

</project>
